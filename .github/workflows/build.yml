name: Build and upload

on:
  pull_request:
  push: # Do not rely on `push` for PR CI - see https://github.com/guardian/mobile-apps-api/pull/2760
    branches:
      - main # Optimal for GHA workflow caching - see https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # The first two permissions are needed to interact with GitHub's OIDC Token endpoint.
    # The second set of three permissions are needed to write test results back to GH
    permissions:
      id-token: write
      contents: read
      issues: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: cdk/package-lock.json

      - run: npm ci
        name: Prepare for CDK infrastructure build
        working-directory: cdk
      - run: npm test
        name: Test CDK infrastructure integrity
        working-directory: cdk
      - run: npm run synth
        name: Build infrastructure definition from CDK
        working-directory: cdk

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: sbt

      - name: Build and test
        env:
          SBT_JUNIT_OUTPUT: ./junit
          JAVA_OPTS: -Dsbt.log.noformat=true
        run: |
          sbt 'test;assembly'
      - uses: guardian/actions-riff-raff@v4
        with:
          configPath: riff-raff.yaml
          projectName: Content Platforms::Most Viewed Video Uploader
          roleArn: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          contentDirectories: |
            cloudformation:
              - cdk/cdk.out/MostViewedVideoUploader-PROD.template.json
              - cdk/cdk.out/MostViewedVideoUploader-CODE.template.json
            most-viewed-video-uploader:
              - target/scala-2.13/most-viewed-video-uploader.jar
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() #runs even if there is a test failure
        with:
          files: junit/*.xml
